CACM-1350
----------------------------------------------------
as is generated by g and whose rules are all 
the augmented predictive analyzer for CONTEXT FREE 
gs can be constructed which generates the same languages 
a standard form grammar it can accept the LANGUAGE 



CACM-2110
----------------------------------------------------
an efficient CONTEXT FREE PARSING ALGORITHM 
ALGORITHM known is described it is similar to both knuth s lr k ALGORITHM 
4 12 5 22 5 23 
class of grammars which seems to include most practical CONTEXT FREE 



CACM-1265
----------------------------------------------------
comparison of the RECOGNITION of more realistic 
a given CONTEXT FREE grammar have been considered and 
to make possible particularly simple description of 
of the turing machine has been chosen 



CACM-2061
----------------------------------------------------
in the second part the utility of the ALGORITHM is discuss 
ed in the light of the experience gained from its use in compiler design 
an ALGORITHM for the construction of bounded CONTEXT parsers 
pushdown automata which generate the different reduction classes 



CACM-1012
----------------------------------------------------
and of a working PARSING ALGORITHM the connection 
g v u t r consists of two finite disjoint 
and syntax directed compilers a formal PARSING system 
between structures assigned by the analyzer and those of 



CACM-2739
----------------------------------------------------
implementation of the linguistic string parser 
to be a valid sentence analysis as the coverage of the 
be useful and adequate for computerized natural LANGUAGE 
and routines the relations which were found to 



CACM-2112
----------------------------------------------------
directed compilers finite state automata 
PARSING meta compilers pushdown transducer syntax 
RECOGNITION and PARSING may be treated as special cases of the translation 
4 10 4 12 4 20 5 22 



CACM-2698
----------------------------------------------------
ca740101 jb january 18 1978 2 57 pm 
cacm january 1974 
a corrected version of the input relative to the driver 
along with elements of bellman s dynamic programming 



CACM-1825
----------------------------------------------------
and the size of the processor produced this procedure 
length of the input plus the number of steps in its 
on the original method described by knuth but decreases 
derivation the technique presented here is based 



CACM-2301
----------------------------------------------------
for converting a large class of affix grammars into fpl 
to koster s definition of affix grammars 
generating parsers for affix grammars 
on an extension of floyd production LANGUAGE fpl included 



